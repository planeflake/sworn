"""Added Building related tables.

Revision ID: ca1b16f32a94
Revises: 9282624f8b7c
Create Date: 2025-05-07 22:44:26.302982

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ca1b16f32a94'
down_revision: Union[str, None] = '9282624f8b7c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('building_blueprints',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('theme_id', sa.UUID(), nullable=False),
    sa.Column('is_unique_per_settlement', sa.Boolean(), server_default='false', nullable=False, comment='If true, only one INSTANCE based on this blueprint can exist per settlement.'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['theme_id'], ['themes.id'], name='fk_building_blueprint_theme_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'theme_id', name='uq_building_blueprint_name_theme')
    )
    op.create_index(op.f('ix_building_blueprints_name'), 'building_blueprints', ['name'], unique=False)
    op.create_index(op.f('ix_building_blueprints_theme_id'), 'building_blueprints', ['theme_id'], unique=False)
    op.create_table('blueprint_stages',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('building_blueprint_id', sa.UUID(), nullable=False),
    sa.Column('stage_number', sa.Integer(), nullable=False, comment='Order of the stage (e.g., 1, 2, 3...)'),
    sa.Column('name', sa.String(length=100), nullable=True, comment='Optional name for the stage (e.g., Foundation, Framing)'),
    sa.Column('description', sa.Text(), nullable=True, comment='Optional description of work done in this stage.'),
    sa.Column('duration_days', sa.Integer(), server_default='1', nullable=False, comment='Time required to complete this stage (e.g., in game days).'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['building_blueprint_id'], ['building_blueprints.id'], name='fk_stage_blueprint_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('building_blueprint_id', 'stage_number', name='uq_blueprint_stage_number')
    )
    op.create_index('ix_blueprint_stage_blueprint_id_stage_number', 'blueprint_stages', ['building_blueprint_id', 'stage_number'], unique=False)
    op.create_index(op.f('ix_blueprint_stages_building_blueprint_id'), 'blueprint_stages', ['building_blueprint_id'], unique=False)
    op.create_table('stage_profession_costs',
    sa.Column('blueprint_stage_id', sa.UUID(), nullable=False),
    sa.Column('profession_name', sa.String(length=100), nullable=False),
    sa.Column('count', sa.Integer(), server_default='1', nullable=False, comment='Number of workers with this profession required for the stage.'),
    sa.ForeignKeyConstraint(['blueprint_stage_id'], ['blueprint_stages.id'], name='fk_profession_cost_stage_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('blueprint_stage_id', 'profession_name', name='pk_stage_profession_costs')
    )
    op.create_index(op.f('ix_stage_profession_costs_profession_name'), 'stage_profession_costs', ['profession_name'], unique=False)
    op.create_table('stage_resource_costs',
    sa.Column('blueprint_stage_id', sa.UUID(), nullable=False),
    sa.Column('resource_id', sa.UUID(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False, comment='Number of units of this resource required for the stage.'),
    sa.ForeignKeyConstraint(['blueprint_stage_id'], ['blueprint_stages.id'], name='fk_resource_cost_stage_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['resource_id'], ['resources.id'], name='fk_resource_cost_resource_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('blueprint_stage_id', 'resource_id', name='pk_stage_resource_costs')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('stage_resource_costs')
    op.drop_index(op.f('ix_stage_profession_costs_profession_name'), table_name='stage_profession_costs')
    op.drop_table('stage_profession_costs')
    op.drop_index(op.f('ix_blueprint_stages_building_blueprint_id'), table_name='blueprint_stages')
    op.drop_index('ix_blueprint_stage_blueprint_id_stage_number', table_name='blueprint_stages')
    op.drop_table('blueprint_stages')
    op.drop_index(op.f('ix_building_blueprints_theme_id'), table_name='building_blueprints')
    op.drop_index(op.f('ix_building_blueprints_name'), table_name='building_blueprints')
    op.drop_table('building_blueprints')
    # ### end Alembic commands ###
