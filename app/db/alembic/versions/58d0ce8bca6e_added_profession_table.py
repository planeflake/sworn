"""Added Profession Table

Revision ID: 58d0ce8bca6e
Revises: ca1b16f32a94
Create Date: 2025-05-07 23:41:14.841230

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '58d0ce8bca6e'
down_revision: Union[str, None] = 'ca1b16f32a94'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('profession_definitions',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('skill_requirements', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('available_theme_ids', postgresql.ARRAY(sa.UUID()), nullable=True),
    sa.Column('valid_unlock_methods', postgresql.ARRAY(sa.String(length=50)), nullable=True, comment='List of valid methods (strings) to unlock this profession. Corresponds to ProfessionUnlockType values.'),
    sa.Column('unlock_condition_details', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment="Detailed data for each unlock type. E.g., [{'type': 'npc_teacher', 'target_id': 'master_smith_prof_id'}, ...]"),
    sa.Column('python_class_override', sa.String(length=100), nullable=True),
    sa.Column('archetype_handler', sa.String(length=100), nullable=True),
    sa.Column('configuration_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_profession_definition_category', 'profession_definitions', ['category'], unique=False)
    op.create_index(op.f('ix_profession_definitions_category'), 'profession_definitions', ['category'], unique=False)
    op.create_index(op.f('ix_profession_definitions_name'), 'profession_definitions', ['name'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_profession_definitions_name'), table_name='profession_definitions')
    op.drop_index(op.f('ix_profession_definitions_category'), table_name='profession_definitions')
    op.drop_index('ix_profession_definition_category', table_name='profession_definitions')
    op.drop_table('profession_definitions')
    # ### end Alembic commands ###
