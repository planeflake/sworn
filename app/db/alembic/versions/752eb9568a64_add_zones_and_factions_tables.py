"""Add zones and factions tables

Revision ID: 752eb9568a64
Revises: 3ac01ef0cfe3
Create Date: 2025-05-18 19:13:58.798356

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '752eb9568a64'
down_revision: Union[str, None] = '3ac01ef0cfe3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('factions',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', postgresql.ENUM(name='status_enum', create_type=False), nullable=False),
    sa.Column('icon_path', sa.String(), nullable=False),
    sa.Column('member_count', sa.Integer(), nullable=False),
    sa.Column('leader_last_changed', sa.Date(), nullable=True),
    sa.Column('theme', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.ForeignKeyConstraint(['theme'], ['themes.id'], name='faction_theme_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'id', name='uq_unique_faction')
    )
    op.create_index(op.f('ix_factions_name'), 'factions', ['name'], unique=True)
    op.create_index(op.f('ix_factions_status'), 'factions', ['status'], unique=False)
    op.create_table('zones',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('controlling_faction', sa.UUID(), nullable=True),
    sa.Column('status', postgresql.ENUM(name='status_enum', create_type=False), nullable=False),
    sa.Column('settlements', sa.UUID(), nullable=True),
    sa.Column('themes', sa.UUID(), nullable=True),
    sa.Column('biomes', sa.UUID(), nullable=False),
    sa.Column('event_timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.ForeignKeyConstraint(['biomes'], ['biomes.id'], name='fk_biome_to_zone'),
    sa.ForeignKeyConstraint(['settlements'], ['settlements.id'], name='fk_settlement_to_zone'),
    sa.ForeignKeyConstraint(['themes'], ['themes.id'], name='fk_theme_to_zone'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'id', name='uq_unique_zone')
    )
    op.create_index(op.f('ix_zones_name'), 'zones', ['name'], unique=True)
    op.create_index(op.f('ix_zones_status'), 'zones', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_zones_status'), table_name='zones')
    op.drop_index(op.f('ix_zones_name'), table_name='zones')
    op.drop_table('zones')
    op.drop_index(op.f('ix_factions_status'), table_name='factions')
    op.drop_index(op.f('ix_factions_name'), table_name='factions')
    op.drop_table('factions')
    # ### end Alembic commands ###
