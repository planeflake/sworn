"""Added location_sub_type with relationships to location_types,themes

Revision ID: d0be1e69dec4
Revises: [new_revision_id]
Create Date: 2025-06-04 01:31:20.125980

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd0be1e69dec4'
down_revision: Union[str, None] = '[new_revision_id]'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('location_sub_types',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('code', sa.String(length=100), nullable=False, comment='Unique code identifier for the subtype'),
    sa.Column('name', sa.String(length=255), nullable=False, comment='Human-readable name'),
    sa.Column('description', sa.Text(), nullable=False, comment='Detailed description of this subtype'),
    sa.Column('location_type_id', sa.UUID(), nullable=False, comment='Reference to the parent location type'),
    sa.Column('theme_id', sa.UUID(), nullable=False, comment='Reference to the theme this subtype belongs to'),
    sa.Column('required_attributes', postgresql.JSONB(astext_type=sa.Text()), server_default='[]', nullable=False, comment='Attributes that must be present for this subtype'),
    sa.Column('optional_attributes', postgresql.JSONB(astext_type=sa.Text()), server_default='[]', nullable=False, comment='Attributes that may be present for this subtype'),
    sa.Column('icon_path', sa.String(length=500), nullable=True, comment='Path to icon file for this subtype'),
    sa.Column('tags', postgresql.ARRAY(sa.String()), server_default='{}', nullable=False, comment='Tags for categorization and filtering'),
    sa.Column('rarity', sa.String(length=50), server_default='common', nullable=False, comment='How common this subtype is'),
    sa.Column('generation_weight', sa.Float(), server_default='1.0', nullable=False, comment='Weight for procedural generation'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['location_type_id'], ['location_types.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['theme_id'], ['themes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_index('idx_location_subtype_code', 'location_sub_types', ['code'], unique=False)
    op.create_index('idx_location_subtype_rarity', 'location_sub_types', ['rarity'], unique=False)
    op.create_index('idx_location_subtype_type_theme', 'location_sub_types', ['location_type_id', 'theme_id'], unique=False)
    op.add_column('location_entities', sa.Column('sub_type_id', sa.UUID(), nullable=True))
    op.create_foreign_key(None, 'location_entities', 'location_sub_types', ['sub_type_id'], ['id'])
    op.drop_column('location_entities', 'location_sub_type')
    op.drop_column('location_types', 'sub_types')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('location_types', sa.Column('sub_types', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True, comment='Available sub-type options for this location type.'))
    op.add_column('location_entities', sa.Column('location_sub_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='Sub-type of the location (e.g., Village, Town, Capital)'))
    op.drop_constraint(None, 'location_entities', type_='foreignkey')
    op.drop_column('location_entities', 'sub_type_id')
    op.drop_index('idx_location_subtype_type_theme', table_name='location_sub_types')
    op.drop_index('idx_location_subtype_rarity', table_name='location_sub_types')
    op.drop_index('idx_location_subtype_code', table_name='location_sub_types')
    op.drop_table('location_sub_types')
    # ### end Alembic commands ###
