"""Added Skills,Locations,Items-2

Revision ID: a1d094bf4eac
Revises: 0e5bf9e93a97
Create Date: 2025-05-08 23:48:36.623818

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a1d094bf4eac'
down_revision: Union[str, None] = '0e5bf9e93a97'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('skills',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('max_level', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_skills_name'), 'skills', ['name'], unique=False)
    op.create_table('character_skills',
    sa.Column('character_id', sa.UUID(), nullable=False),
    sa.Column('skill_id', sa.UUID(), nullable=False),
    sa.Column('level', sa.Integer(), server_default='1', nullable=False),
    sa.Column('xp', sa.Integer(), server_default='0', nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('character_id', 'skill_id')
    )
    op.create_table('items',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('item_type', sa.Enum('WEAPON', 'ARMOR', 'CONSUMABLE', 'MATERIAL', 'QUEST', 'CURRENCY', 'MISC', name='item_type_enum'), nullable=True),
    sa.Column('value', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('status', sa.Enum('PRISTINE', 'USED', 'BROKEN', name='item_status_enum'), nullable=True),
    sa.Column('quantity', sa.Integer(), server_default='1', nullable=False),
    sa.Column('is_stackable', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('owner_character_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('quantity > 0', name='chk_item_quantity_positive'),
    sa.ForeignKeyConstraint(['owner_character_id'], ['characters.id'], name='fk_item_owner_character_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_items_item_type'), 'items', ['item_type'], unique=False)
    op.create_index(op.f('ix_items_name'), 'items', ['name'], unique=False)
    op.create_index(op.f('ix_items_owner_character_id'), 'items', ['owner_character_id'], unique=False)
    op.create_index(op.f('ix_items_status'), 'items', ['status'], unique=False)
    op.create_table('locations',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('world_id', sa.UUID(), nullable=False),
    sa.Column('pos_x', sa.Float(), nullable=True),
    sa.Column('pos_y', sa.Float(), nullable=True),
    sa.Column('pos_z', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['world_id'], ['worlds.id'], name='fk_location_world_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_location_world_coords', 'locations', ['world_id', 'pos_x', 'pos_y', 'pos_z'], unique=True)
    op.create_index(op.f('ix_locations_name'), 'locations', ['name'], unique=False)
    op.create_index(op.f('ix_locations_world_id'), 'locations', ['world_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_locations_world_id'), table_name='locations')
    op.drop_index(op.f('ix_locations_name'), table_name='locations')
    op.drop_index('ix_location_world_coords', table_name='locations')
    op.drop_table('locations')
    op.drop_index(op.f('ix_items_status'), table_name='items')
    op.drop_index(op.f('ix_items_owner_character_id'), table_name='items')
    op.drop_index(op.f('ix_items_name'), table_name='items')
    op.drop_index(op.f('ix_items_item_type'), table_name='items')
    op.drop_table('items')
    op.drop_table('character_skills')
    op.drop_index(op.f('ix_skills_name'), table_name='skills')
    op.drop_table('skills')
    # ### end Alembic commands ###
