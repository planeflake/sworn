"""Added relationship between building instances and settlements

Revision ID: 80e932503c53
Revises: 3932e126b100
Create Date: 2025-05-11 17:36:41.439803

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '80e932503c53'
down_revision: Union[str, None] = '3932e126b100'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('building_instances',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('building_blueprint_id', sa.UUID(), nullable=False),
    sa.Column('settlement_id', sa.UUID(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('UNDER_CONSTRUCTION', 'ACTIVE', 'INACTIVE', 'DAMAGED', 'DESTROYED', 'UPGRADING', name='building_status_enum'), nullable=False),
    sa.Column('current_hp', sa.Integer(), nullable=False),
    sa.Column('max_hp', sa.Integer(), nullable=False),
    sa.Column('inhabitants', sa.Integer(), nullable=False),
    sa.Column('max_inhabitants', sa.Integer(), nullable=False),
    sa.Column('construction_progress', sa.Float(), nullable=False),
    sa.Column('current_stage_number', sa.Integer(), nullable=False, comment='The stage number currently being worked on or just completed.'),
    sa.Column('active_features', postgresql.ARRAY(sa.UUID()), nullable=True),
    sa.Column('stored_resources', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('assigned_workers', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('instance_description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['building_blueprint_id'], ['building_blueprints.id'], ),
    sa.ForeignKeyConstraint(['settlement_id'], ['settlements.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_building_instances_building_blueprint_id'), 'building_instances', ['building_blueprint_id'], unique=False)
    op.create_index(op.f('ix_building_instances_settlement_id'), 'building_instances', ['settlement_id'], unique=False)
    op.add_column('building_blueprints', sa.Column('defense', sa.Integer(), server_default='0', nullable=False, comment='Flat defense/security rating provided by this blueprint'))
    op.add_column('building_blueprints', sa.Column('visibility_range', sa.Integer(), server_default='0', nullable=False, comment='Sight range bonus (meters) from this building'))
    op.add_column('building_blueprints', sa.Column('garrison_capacity', sa.Integer(), server_default='0', nullable=False, comment='How many troops can garrison here'))
    op.add_column('building_blueprints', sa.Column('alert_efficiency', sa.Float(), server_default='0', nullable=False, comment='Multiplier or percent bonus to alarm radius/speed'))
    op.add_column('building_blueprints', sa.Column('morale_bonus', sa.Integer(), server_default='0', nullable=False, comment='Flat morale bonus to nearby units'))
    op.add_column('building_blueprints', sa.Column('attractiveness', sa.Integer(), server_default='0', nullable=False, comment='Boost to settlement attractiveness (trade/tax income)'))
    op.add_column('characters', sa.Column('current_building_home_id', sa.UUID(), nullable=True))
    op.add_column('characters', sa.Column('current_building_workplace_id', sa.UUID(), nullable=True))
    op.create_index(op.f('ix_characters_current_building_home_id'), 'characters', ['current_building_home_id'], unique=False)
    op.create_index(op.f('ix_characters_current_building_workplace_id'), 'characters', ['current_building_workplace_id'], unique=False)
    op.create_foreign_key('fk_char_work_building_id', 'characters', 'building_instances', ['current_building_workplace_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key('fk_char_home_building_id', 'characters', 'building_instances', ['current_building_home_id'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_char_home_building_id', 'characters', type_='foreignkey')
    op.drop_constraint('fk_char_work_building_id', 'characters', type_='foreignkey')
    op.drop_index(op.f('ix_characters_current_building_workplace_id'), table_name='characters')
    op.drop_index(op.f('ix_characters_current_building_home_id'), table_name='characters')
    op.drop_column('characters', 'current_building_workplace_id')
    op.drop_column('characters', 'current_building_home_id')
    op.drop_column('building_blueprints', 'attractiveness')
    op.drop_column('building_blueprints', 'morale_bonus')
    op.drop_column('building_blueprints', 'alert_efficiency')
    op.drop_column('building_blueprints', 'garrison_capacity')
    op.drop_column('building_blueprints', 'visibility_range')
    op.drop_column('building_blueprints', 'defense')
    op.drop_index(op.f('ix_building_instances_settlement_id'), table_name='building_instances')
    op.drop_index(op.f('ix_building_instances_building_blueprint_id'), table_name='building_instances')
    op.drop_table('building_instances')
    # ### end Alembic commands ###
