"""Added skills tables

Revision ID: 13d294c01225
Revises: a1d094bf4eac
Create Date: 2025-05-09 12:59:01.172196

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '13d294c01225'
down_revision: Union[str, None] = 'a1d094bf4eac'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_blueprint_stage_blueprint_id_stage_number', table_name='blueprint_stages')
    op.drop_constraint('uq_blueprint_stage_number', 'blueprint_stages', type_='unique')
    op.create_index('ix_bp_stage_bp_id_stage_number', 'blueprint_stages', ['building_blueprint_id', 'stage_number'], unique=False)
    op.create_unique_constraint('uq_bp_stage_number', 'blueprint_stages', ['building_blueprint_id', 'stage_number'])
    op.add_column('building_blueprints', sa.Column('_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Overall blueprint metadata (e.g., final stats template, category).'))
    op.drop_constraint('uq_building_blueprint_name_theme', 'building_blueprints', type_='unique')
    op.create_unique_constraint('uq_bp_name_theme', 'building_blueprints', ['name', 'theme_id'])
    op.drop_index('ix_characters_player_account_id', table_name='characters')
    op.create_foreign_key('fk_char_location_id', 'characters', 'locations', ['current_location_id'], ['id'], ondelete='SET NULL')
    op.drop_column('characters', 'player_account_id')
    op.add_column('items', sa.Column('_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Instance-specific data, e.g., magical properties, durability, crafter_id.'))
    op.drop_constraint('fk_item_owner_character_id', 'items', type_='foreignkey')
    op.create_foreign_key('fk_item_owner_char_id', 'items', 'characters', ['owner_character_id'], ['id'], ondelete='SET NULL')
    op.add_column('locations', sa.Column('_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Data about the location, e.g., traversability, weather effects.'))
    op.drop_index('ix_location_world_coords', table_name='locations')
    op.create_index('ix_location_world_coords', 'locations', ['world_id', 'pos_x', 'pos_y', 'pos_z'], unique=False)
    op.drop_constraint('fk_location_world_id', 'locations', type_='foreignkey')
    op.create_foreign_key('fk_location_world_id', 'locations', 'worlds', ['world_id'], ['id'], ondelete='CASCADE')
    op.drop_index('ix_skills_name', table_name='skills')
    op.create_index(op.f('ix_skills_name'), 'skills', ['name'], unique=True)
    op.alter_column('themes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('themes', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('themes_name_key', 'themes', type_='unique')
    op.create_index(op.f('ix_themes_name'), 'themes', ['name'], unique=True)
    op.alter_column('worlds', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('worlds', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_worlds_name'), 'worlds', ['name'], unique=False)
    op.create_index(op.f('ix_worlds_theme_id'), 'worlds', ['theme_id'], unique=False)
    op.create_foreign_key('fk_world_theme_id', 'worlds', 'themes', ['theme_id'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_world_theme_id', 'worlds', type_='foreignkey')
    op.drop_index(op.f('ix_worlds_theme_id'), table_name='worlds')
    op.drop_index(op.f('ix_worlds_name'), table_name='worlds')
    op.alter_column('worlds', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('worlds', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('ix_themes_name'), table_name='themes')
    op.create_unique_constraint('themes_name_key', 'themes', ['name'])
    op.alter_column('themes', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('themes', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('ix_skills_name'), table_name='skills')
    op.create_index('ix_skills_name', 'skills', ['name'], unique=False)
    op.drop_constraint('fk_location_world_id', 'locations', type_='foreignkey')
    op.create_foreign_key('fk_location_world_id', 'locations', 'worlds', ['world_id'], ['id'])
    op.drop_index('ix_location_world_coords', table_name='locations')
    op.create_index('ix_location_world_coords', 'locations', ['world_id', 'pos_x', 'pos_y', 'pos_z'], unique=True)
    op.drop_column('locations', '_metadata')
    op.drop_constraint('fk_item_owner_char_id', 'items', type_='foreignkey')
    op.create_foreign_key('fk_item_owner_character_id', 'items', 'characters', ['owner_character_id'], ['id'])
    op.drop_column('items', '_metadata')
    op.add_column('characters', sa.Column('player_account_id', sa.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint('fk_char_location_id', 'characters', type_='foreignkey')
    op.create_index('ix_characters_player_account_id', 'characters', ['player_account_id'], unique=True)
    op.drop_constraint('uq_bp_name_theme', 'building_blueprints', type_='unique')
    op.create_unique_constraint('uq_building_blueprint_name_theme', 'building_blueprints', ['name', 'theme_id'])
    op.drop_column('building_blueprints', '_metadata')
    op.drop_constraint('uq_bp_stage_number', 'blueprint_stages', type_='unique')
    op.drop_index('ix_bp_stage_bp_id_stage_number', table_name='blueprint_stages')
    op.create_unique_constraint('uq_blueprint_stage_number', 'blueprint_stages', ['building_blueprint_id', 'stage_number'])
    op.create_index('ix_blueprint_stage_blueprint_id_stage_number', 'blueprint_stages', ['building_blueprint_id', 'stage_number'], unique=False)
    # ### end Alembic commands ###
