# --- START OF FILE app/game_state/entities/character.py ---

from dataclasses import dataclass, field
from typing import Optional, List
from datetime import datetime
from uuid import UUID, uuid4

# --- Import Enums (Ideally from domain/shared location, but DB model path used for now) ---
# Consider moving enums like CharacterTypeEnum to app/game_state/enums.py
from app.db.models.character import CharacterTypeEnum, CharacterStatusEnum

# --- Import OTHER DOMAIN ENTITIES ---
# These should point to files within app/game_state/entities/
from .equipment import EquipmentEntity # Assuming EquipmentEntity in entities/equipment.py
from .skill import SkillEntity as Skill           # Assuming SkillEntity in entities/skill.py
from .stat import StatEntity as Stat               # Assuming StatEntity in entities/stat.py
from .item import Item              # Assuming ItemEntity in entities/item.py

@dataclass
class CharacterEntity: # Changed class name to CharacterEntity for clarity/convention
    """ Domain Entity representing a Character's state """

    # --- Fields without defaults (required on creation) ---
    # These should come first unless using KW_ONLY tricks
    name: str
    character_type: CharacterTypeEnum
    world_id: UUID
    description: Optional[str] = None

    # --- Identifier (field with default factory) ---
    entity_id: UUID = field(default_factory=uuid4)

    # --- Fields with simple defaults ---
    level: int = 1
    is_active: bool = True
    status: CharacterStatusEnum = CharacterStatusEnum.ALIVE


    # --- Complex fields: Lists of other Domain Entities ---
    stats: List[Stat] = field(default_factory=list)
    equipment: List[EquipmentEntity] = field(default_factory=list)
    items: List[Item] = field(default_factory=list) # Inventory
    skills: List[Skill] = field(default_factory=list)

    # --- Optional Foreign Keys / Links (to other entities' IDs) ---
    player_account_id: Optional[UUID] = None
    current_location_id: Optional[UUID] = None

    # --- Timestamps (Optional, usually set later) ---
    created_at: Optional[datetime] = None
    updated_at: Optional[datetime] = None
    last_login: Optional[datetime] = None

    # (No __init__ needed - generated by @dataclass)
    # (No Config block needed - that's for Pydantic)

# --- END OF FILE app/game_state/entities/character.py ---